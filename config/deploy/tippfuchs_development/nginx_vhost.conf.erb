# see https://www.mare-system.de/guide-to-nginx-ssl-spdy-hsts/

upstream unicorn {
  server unix:/tmp/unicorn.<%= fetch(:full_app_name) %>.sock fail_timeout=0;
}

<% if fetch(:enable_ssl) %>
# http-redirects to https; even if using hsts;
server {
  listen              80 default_server;
  server_name         <%= fetch(:nginx_server_name) %>;
  
  rewrite ^ https://$server_name$request_uri? permanent;
  
  # dummy redirect, if http+https-server-in-one
  if ($scheme = http) {
    return 301 https://$server_name$request_uri;
  }
}
server {
  listen               443 ssl<% if fetch(:nginx_enable_spdy) %> spdy<% end %> default_server;
  server_name          <%= fetch(:nginx_server_name) %>;
  root                 /vagrant;
  
  access_log           off;
  error_log            /vagrant/log/nginx_error.log;
  
  keepalive_timeout    10;
  client_max_body_size 10M;
  
  # HTTP Strict Transport Security (HSTS) - 12 months
  add_header  Strict-Transport-Security "max-age=31536000; includeSubDomains";
  
  # SSL Config
  ssl on;
  ssl_certificate      <%= shared_path %>/config/ssl_cert.crt;
  ssl_certificate_key  <%= shared_path %>/config/ssl_cert.key;
  
  # Perfect Forward Secrecy (PFS) and BEAST / Lucky 13
  ssl_protocols        SSLv3 TLSv1 TLSv1.1 TLSv1.2;
  ssl_prefer_server_ciphers on;
  
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 10m;
  
  # turn off gzip to protect against BREACH / http://breachattack.com/
  gzip on;
  
  # Cipher Suites
  # suggestion from sslabs / including PFS, good compatibility
  ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH+aRSA+RC4:EECDH:EDH+aRSA:RC4:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
  
  # nginx-default - kind of ok and working in usually any cases, limited PFS
  #ssl_ciphers HIGH:!aNULL:!MD5;
  # additional cipher_suite suggestions -> see https://www.mare-system.de/guide-to-nginx-ssl-spdy-hsts/
  
  # deny access to .htaccess files, if Apache's document root
  # concurs with nginx's one
  location ~ /\.ht {
    deny all;
  }
  
  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }
  
  try_files $uri/index.html $uri @unicorn;
  location @unicorn {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://unicorn;
  }
  
  
  error_page 500 502 504 /500.html;
  # capistrano-maintenance
  error_page 503 @503;

  if (-f $document_root/system/maintenance.html) {
    return 503;
  }
  
  location @503 {
    # Serve static assets if found.
    if (-f $request_filename) {
      break;
    }
  
    rewrite ^(.*)$ /system/maintenance.html break;
  }
}
<% else %>
server {
  listen 80 default deferred;
  server_name          <%= fetch(:nginx_server_name) %>;
  root                 /vagrant;
  
  access_log           off;
  error_log            /vagrant/log/nginx_error.log;
  
  keepalive_timeout    10;
  client_max_body_size 10M;
  
  # turn off gzip to protect against BREACH / http://breachattack.com/
  gzip on;
  
  # deny access to .htaccess files, if Apache's document root
  # concurs with nginx's one
  location ~ /\.ht {
    deny all;
  }
  
  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }
  
  try_files $uri/index.html $uri @unicorn;
  location @unicorn {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://unicorn;
  }
  
  
  error_page 500 502 504 /500.html;
  # capistrano-maintenance
  error_page 503 @503;

  if (-f $document_root/system/maintenance.html) {
    return 503;
  }
  
  location @503 {
    # Serve static assets if found.
    if (-f $request_filename) {
      break;
    }
  
    rewrite ^(.*)$ /system/maintenance.html break;
  }
}
<% end %>